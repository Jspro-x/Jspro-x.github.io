<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2021/12/15/zheng-ze-biao-da-shi/"/>
      <url>/2021/12/15/zheng-ze-biao-da-shi/</url>
      
        <content type="html"><![CDATA[<h2 id="初识正则表达式"><a href="#初识正则表达式" class="headerlink" title="初识正则表达式"></a>初识正则表达式</h2><h4 id="什么是正则表达式"><a href="#什么是正则表达式" class="headerlink" title="什么是正则表达式"></a>什么是正则表达式</h4><p>​         正则表达式是一种用来匹配字符串的强有力的武器。它的设计思想是用一种描述性的语言来给字符串定义一个规则，凡是符合规则的字符串，我们就认为它“匹配”了，否则，该字符串就是不合法的。</p><h4 id="正则表达式语法规范"><a href="#正则表达式语法规范" class="headerlink" title="正则表达式语法规范"></a>正则表达式语法规范</h4><p>在正则表达式中，如果直接给出字符，就是精确匹配</p><p> 用<code>\d</code>可以匹配一个数字，<code>\w</code>可以匹配一个字母或数字，所以：</p><ul><li><code>'00\d'</code>可以匹配<code>'009'</code>，但无法匹配<code>'00c'</code>；</li><li><code>'\d\d\d'</code>可以匹配<code>'000'</code>；</li><li><code>'\w\w'</code>可以匹配<code>'js'</code>；</li></ul><p><code>.</code>可以匹配任意字符，所以：</p><ul><li><code>'js.'</code>可以匹配<code>'jsp'</code>、<code>'jsz'</code>、<code>'js!'</code>等等。</li></ul><p>要匹配变长的字符，在正则表达式中，用<code>*</code>表示任意个字符（包括0个），用<code>+</code>表示至少一个字符，用<code>?</code>表示0个或1个字符，用<code>{n}</code>表示n个字符，用<code>{n,m}</code>表示n-m个字符：</p><p>来看一个复杂的例子：<code>\d{3}\s+\d{3,8}</code>。</p><p>我们来从左到右解读一下：</p><ol><li><code>\d{3}</code>表示匹配3个数字，例如<code>'010'</code>；</li><li><code>\s</code>可以匹配一个空格（也包括Tab等空白符），所以<code>\s+</code>表示至少有一个空格，例如匹配<code>' '</code>，<code>'\t\t'</code>等；</li><li><code>\d{3,8}</code>表示3-8个数字，例如<code>'1234567'</code>。</li></ol><p>综合起来，上面的正则表达式可以匹配以任意个空格隔开的带区号的电话号码。</p><p>如果要匹配<code>'010-12345'</code>这样的号码呢？由于<code>'-'</code>是特殊字符，在正则表达式中，要用<code>'\'</code>转义，所以，上面的正则是<code>\d{3}\-\d{3,8}</code>。</p><p>但是，仍然无法匹配<code>'010 - 12345'</code>，因为带有空格。所以我们需要更复杂的匹配方式。</p><h4 id="正则表达式简单练习"><a href="#正则表达式简单练习" class="headerlink" title="正则表达式简单练习"></a>正则表达式简单练习</h4>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GIT的学习笔记（一）</title>
      <link href="/2021/12/15/git-xue-xi-bi-ji-yi/"/>
      <url>/2021/12/15/git-xue-xi-bi-ji-yi/</url>
      
        <content type="html"><![CDATA[<h2 id="GIT学习笔记（一）"><a href="#GIT学习笔记（一）" class="headerlink" title="GIT学习笔记（一）"></a>GIT学习笔记（一）</h2><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><ul><li><p>创建用户和邮箱</p><pre class="language-git" data-language="git"><code class="language-git">$ git config --global user.name "Jspro_x"$ git config --global user.email "zx2272982792@gmail.com"</code></pre></li><li><p>生成目录、转到生成目录和显示当前目录</p><pre class="language-git" data-language="git"><code class="language-git">$ mkdir js$ cd js$ pwd</code></pre></li><li><p>把这个目录变成Git可以管理的仓库、显示隐藏目录</p><pre class="language-git" data-language="git"><code class="language-git">$ git int$ ls -ah</code></pre></li><li><p>添加一个文件到仓库，并提交到仓库里</p><pre class="language-git" data-language="git"><code class="language-git">$ git add text.txt//这个文件是在js目录下创建$ git commit -m "wrote a test file"//引号内为文件简要说明</code></pre></li><li><p>查看当前仓库状态</p><pre class="language-none"><code class="language-none">$ git status</code></pre></li><li><p>查看文件的difference</p><pre class="language-git" data-language="git"><code class="language-git">$git diff test.txt</code></pre></li><li><p>显示从最近到最远的提交日志</p><pre class="language-git" data-language="git"><code class="language-git">$ git log$ git log --pretty = oneline//简写</code></pre><img src="/2021/12/15/git-xue-xi-bi-ji-yi/1.png" class=""><img src="/2021/12/15/git-xue-xi-bi-ji-yi/2.png" class=""></li><li><p>回溯到上个版本</p><pre class="language-git" data-language="git"><code class="language-git">$ git reset --hard HEAD^HEAD is now at e475afc add distributed$ cat test.txtGit is a distributed version control system.Git is free software.</code></pre></li><li><p>再来到最新的版本</p><pre class="language-none"><code class="language-none">$ git reset --hard f3f18//最新的版本号HEAD is now at f3f182a append GPL$ cat test.txtGit is a distributed version control system.Git is free software distributed under the GPL.</code></pre></li><li><p>显示历史命令的commit id</p><pre class="language-git" data-language="git"><code class="language-git">$ git reflogf3f182a (HEAD -&gt; master) HEAD@{0}: reset: moving to f3f1836a007f HEAD@{1}: reset: moving to HEAD^f3f182a (HEAD -&gt; master) HEAD@{2}: commit: append GPL36a007f HEAD@{3}: commit: add distributed7f88345 HEAD@{4}: commit (initial): wwrote a test file</code></pre></li><li><p>小结</p><ul><li><p><code>HEAD</code>指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令<code>git reset --hard commit_id</code>。</p></li><li><p>穿梭前，用<code>git log</code>可以查看提交历史，以便确定要回退到哪个版本。</p></li><li><p>要重返未来，用<code>git reflog</code>查看命令历史，以便确定要回到未来的哪个版本。</p></li></ul></li></ul><h4 id="工作区和缓存区"><a href="#工作区和缓存区" class="headerlink" title="工作区和缓存区"></a>工作区和缓存区</h4><p>​        Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支<code>master</code>，以及指向<code>master</code>的一个指针叫<code>HEAD</code>。</p><img src="/2021/12/15/git-xue-xi-bi-ji-yi/5.png" class=""><p>   第一步是用<code>git add</code>把文件添加进去，实际上就是把文件修改添加到暂存区；</p><p>   第二步是用<code>git commit</code>提交更改，实际上就是把暂存区的所有内容提交到当前分       支。</p><p>   因为创建Git版本库时，Git自动为我们创建了唯一一个<code>master</code>分支，所以，现在，<code>git commit</code>就是往<code>master</code>分支上提交更改。</p><p>   可以简单理解为，需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。</p><p><code>git add</code>命令实际上就是把要提交的所有修改放到暂存区（Stage）</p><pre class="language-git" data-language="git"><code class="language-git">$ git add test.txt$ git add LICENSE</code></pre><img src="/2021/12/15/git-xue-xi-bi-ji-yi/6.png" class=""><p>执行<code>git commit</code>就可以一次性把暂存区的所有修改提交到分支。</p><pre class="language-none"><code class="language-none">$ git commit -m "understand how stage woeks"[master 353e02b] understand how stage woeks 2 files changed, 3 insertions(+), 1 deletion(-) create mode 100644 LICENSE</code></pre><img src="/2021/12/15/git-xue-xi-bi-ji-yi/7.png" class=""><h4 id="管理修改"><a href="#管理修改" class="headerlink" title="管理修改"></a>管理修改</h4><ul><li>具体操作</li></ul><pre class="language-git" data-language="git"><code class="language-git">$ cat test.txt//第一次修改Git is a distributed version control system.Git is free software distributed under the GPL.Git has a mutable index called stage.Git tracks changes.$git add test.txt$git statusOn branch masterChanges to be committed:  (use "git restore --staged &lt;file&gt;..." to unstage)        modified:   test.txt$ cat test.txt//第二次修改Git is a distributed version control system.Git is free software distributed under the GPL.Git has a mutable index called stage.Git tracks changes of files.$ git statusOn branch masterChanges not staged for commit:  (use "git add &lt;file&gt;..." to update what will be committed)  (use "git restore &lt;file&gt;..." to discard changes in working directory)        modified:   test.txtno changes added to commit (use "git add" and/or "git commit -a")//这里显示提交的只是第一次放到缓存区的内容</code></pre><p>​        Git管理的是修改，当用<code>git add</code>命令后，在工作区的第一次修改被放入暂存区，准备提交，但是，在工作区的第二次修改并没有放入暂存区，所以，**<code>git commit</code>只负责把暂存区的修改提交了，也就是第一次的修改被提交了，第二次的修改不会被提交。**</p><pre class="language-git" data-language="git"><code class="language-git">$ git diff HEAD -- test.txtdiff --git a/test.txt b/test.txtindex db28b2c..9a8b341 100644--- a/test.txt+++ b/test.txt@@ -1,4 +1,4 @@ Git is a distributed version control system. Git is free software distributed under the GPL. Git has a mutable index called stage.-Git tracks changes.\ No newline at end of file+Git tracks changes of files.\ No newline at end of file</code></pre><p>​        可见，第二次修改确实没有被提交。</p><p>​        那怎么提交第二次修改呢？可以继续<code>git add</code>再<code>git commit</code>，也可以别着急提交第一次修改，先<code>git add</code>第二次修改，再<code>git commit</code>，就相当于把两次修改合并后一块提交了：</p><p>第一次修改 -&gt; <code>git add</code> -&gt; 第二次修改 -&gt; <code>git add</code> -&gt; <code>git commit</code></p><ul><li><p>小结</p><p>每次修改，如果不用<code>git add</code>到暂存区，那就不会加入到<code>commit</code>中。</p><h4 id="撤销修改"><a href="#撤销修改" class="headerlink" title="撤销修改"></a>撤销修改</h4></li><li><p>工作区撤销修改：</p></li></ul><pre class="language-git" data-language="git"><code class="language-git">$ git checkout -- test.txt</code></pre><ul><li>把暂存区的修改撤销掉,转到工作区：</li></ul><pre class="language-none"><code class="language-none">$ git reset HEAD test.txtUnstaged changes after reset:M       test.txt</code></pre><p>​      <code>git reset</code>命令既可以回退版本，也可以把暂存区的修改回退到工作区。当我们用<code>HEAD</code>时，表示最新的版本，再在工作区执行相应撤销命令即可。</p><ul><li>删除：</li></ul><pre class="language-git" data-language="git"><code class="language-git">$ git rm test2.txtrm 'test2.txt'$ git checkout -- test2.txt</code></pre><p>​      <code>git checkout</code>其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。</p><p>从来没有被添加到版本库就被删除的文件，是无法恢复的！</p><ul><li>小结</li></ul><p>场景1：当改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- file</code>。</p><p>场景2：不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>git reset HEAD &lt;file&gt;</code>，就回到了场景1，第二步按场景1操作。</p><p>场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考<a href="https://www.liaoxuefeng.com/wiki/896043488029600/897013573512192">版本回退</a>一节，不过前提是没有推送到远程库。</p><h4 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h4><ul><li><p>关联自己的仓库(要先在自己的github上先建好一个类似的空仓库)</p><pre class="language-git" data-language="git"><code class="language-git">$git remote add origin git@github.com:Jspro-x/Jspro-x.git</code></pre></li><li><p>本地Git仓库和GitHub仓库之间的传输是通过SSH加密的（先把生成好的密钥黏贴到自己建好的github仓库的ssh内）本地库的所有内容推送到远程库</p></li></ul><pre class="language-git" data-language="git"><code class="language-git">$ git push -u origin masterCounting objects: 20, done.Delta compression using up to 4 threads.Compressing objects: 100% (15/15), done.Writing objects: 100% (20/20), 1.64 KiB | 560.00 KiB/s, done.Total 20 (delta 5), reused 0 (delta 0)remote: Resolving deltas: 100% (5/5), done.To github.com:michaelliao/learngit.git * [new branch]      master -&gt; masterBranch 'master' set up to track remote branch 'master' from 'origin'.</code></pre><ul><li> 小结</li></ul><p>要关联一个远程库，使用命令<code>git remote add origin git@server-name:path/repo-name.git</code>；</p><p>关联一个远程库时必须给远程库指定一个名字，<code>origin</code>是默认习惯命名；</p><p>关联后，使用命令<code>git push -u origin master</code>第一次推送master分支的所有内容；</p><p>此后，每次本地提交后，只要有必要，就可以使用命令<code>git push origin master</code>推送最新修改；</p><p>分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！当有网络的时候，再把本地提交推送一下就完成了同步。</p><p>克隆</p><pre class="language-git" data-language="git"><code class="language-git">$ git clone git@github.com:Jspro-x/vue2-elm</code></pre><h4 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h4><ul><li>具体操作</li></ul><img src="/2021/12/15/git-xue-xi-bi-ji-yi/3.png" class=""><img src="/2021/12/15/git-xue-xi-bi-ji-yi/4.png" class=""><ul><li><h5 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h5></li></ul><p>Git鼓励大量使用分支：</p><p>查看分支：<code>git branch</code></p><p>创建分支：<code>git branch &lt;name&gt;</code></p><p>切换分支：<code>git checkout &lt;name&gt;</code>或者<code>git switch &lt;name&gt;</code></p><p>创建+切换分支：<code>git checkout -b &lt;name&gt;</code>或者<code>git switch -c &lt;name&gt;</code></p><p>合并某分支到当前分支：<code>git merge &lt;name&gt;</code></p><p>删除分支：<code>git branch -d &lt;name&gt;</code></p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS高级运用（一）</title>
      <link href="/2021/12/13/css-gao-ji-yun-yong-yi/"/>
      <url>/2021/12/13/css-gao-ji-yun-yong-yi/</url>
      
        <content type="html"><![CDATA[<h2 id="CSS高级运用（一）"><a href="#CSS高级运用（一）" class="headerlink" title="CSS高级运用（一）"></a>CSS高级运用（一）</h2><h3 id="双伪素构建三角效果"><a href="#双伪素构建三角效果" class="headerlink" title="双伪素构建三角效果"></a>双伪素构建三角效果</h3><p>如图运用CSS实现下图的三角效果：</p><img src="/2021/12/13/css-gao-ji-yun-yong-yi/1.png" class="" title="1.三角效果"><ul><li><p>先搭建html骨架：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>验证身份<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ico<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入6位验证码<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>验证<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></code></pre></li><li><p>实现原理：主要运用border属性，把双伪元素的宽高先设为0，用border挤出4个三角形，再分别把其它三个三角形设置为透明色也就是transparent属性，先把before伪元素的宽度设置大一点，把before颜色设置为父元素before颜色，再用子绝父相定位到合适的位置；剩下的after伪元素的宽度设置比before伪元素的宽度小1px，再把after伪元素颜色设置为#fff，再用子绝父相定位到比before位置的left属性大1px压住before的绝大部分，其它相同，好了现在效果就出来了。</p></li><li><p>具体CSS样式：</p><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">&lt;style&gt;    .box</span> <span class="token punctuation">{</span>        <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>        <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>        <span class="token comment">/* align-items: center; */</span>        <span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span>        <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 180px auto<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>    <span class="token punctuation">}</span>      <span class="token selector">h2</span> <span class="token punctuation">{</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 30px auto<span class="token punctuation">;</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token punctuation">}</span>      <span class="token selector">.ico</span> <span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> 88px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 5px 0<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 1px solid <span class="token function">rgba</span><span class="token punctuation">(</span>8<span class="token punctuation">,</span> 189<span class="token punctuation">,</span> 235<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 2px 4px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>      <span class="token comment">/* 添加三角效果 */</span>    <span class="token selector">.ico::before,    .ico::after</span> <span class="token punctuation">{</span>        <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>        <span class="token property">border-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span>        <span class="token property">border-color</span><span class="token punctuation">:</span> #fff transparent transparent<span class="token punctuation">;</span>    <span class="token punctuation">}</span>      <span class="token selector">.ico::before</span> <span class="token punctuation">{</span>        <span class="token property">left</span><span class="token punctuation">:</span> 70px<span class="token punctuation">;</span>        <span class="token property">border-width</span><span class="token punctuation">:</span> 7px<span class="token punctuation">;</span>        <span class="token property">border-top-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>8<span class="token punctuation">,</span> 189<span class="token punctuation">,</span> 235<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>      <span class="token selector">.ico::after</span> <span class="token punctuation">{</span>        <span class="token property">left</span><span class="token punctuation">:</span> 71px<span class="token punctuation">;</span>        <span class="token property">border-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>      <span class="token selector">input</span> <span class="token punctuation">{</span>        <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 26px<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>        <span class="token comment">/* text-align: center; */</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 26px<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 1px solid <span class="token function">rgb</span><span class="token punctuation">(</span>247<span class="token punctuation">,</span> 129<span class="token punctuation">,</span> 18<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">padding-left</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>      <span class="token selector">button</span> <span class="token punctuation">{</span>        <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 140px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>        <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>240<span class="token punctuation">,</span> 22<span class="token punctuation">,</span> 22<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>      <span class="token selector">button:hover</span> <span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>177<span class="token punctuation">,</span> 10<span class="token punctuation">,</span> 10<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>209<span class="token punctuation">,</span> 201<span class="token punctuation">,</span> 201<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>&lt;/style&gt;  </code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
